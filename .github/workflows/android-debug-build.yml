name: Android Debug Build

on:
  push:
    branches: [ main, feat/**, fix/**, chore/** ]
  pull_request:

jobs:
  android-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Download cmdline-tools (no Java requirement yet)
      - name: Install Android cmdline-tools
        run: |
          set -euxo pipefail
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          mkdir -p "$ANDROID_SDK_ROOT"/cmdline-tools
          curl -sSL -o /tmp/cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q /tmp/cmdtools.zip -d /tmp/cmdtools
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv /tmp/cmdtools/cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"

      # ✅ JDK 17 ONLY for sdkmanager (classfile version 61)
      - name: Set up JDK 17 (Temurin) for SDK install
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK components (api 31, build-tools 31.0.0)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -euxo pipefail
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --install \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;31.0.0"
          "$ANDROID_SDK_ROOT/platform-tools/adb" version || true

      # ⬅️ Switch back to Java 11 for Gradle/AGP 7.0.x
      - name: Set up JDK 11 (Temurin) for Gradle
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Normalize gradlew (LF + +x) for Linux CI
        run: |
          git config --global core.autocrlf false
          sed -i 's/\r$//' android/gradlew
          chmod +x android/gradlew

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Install JS deps
        run: yarn --frozen-lockfile

      - name: Build Android Debug APK
        working-directory: android
        run: ./gradlew --no-daemon clean assembleDebug

      - name: Upload APK
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

      - name: Upload Gradle reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports
          path: |
            android/**/build/reports/**
            android/**/build/outputs/**
          if-no-files-found: warn
