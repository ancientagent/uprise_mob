name: Android Debug Build

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ feat/ccpm-framework ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Android Debug Build
    runs-on: ubuntu-latest
    timeout-minutes: 30

    defaults:
      run:
        shell: bash -Eeuo pipefail {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup JDK 17 (for sdkmanager)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android cmdline-tools (zip)
        run: |
          set -Eeuo pipefail
          ANDROID_SDK_ROOT="$HOME/android-sdk"
          mkdir -p "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"
          curl -sSL -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip
          mkdir -p cmdline-tools/latest
          mv cmdline-tools/* cmdline-tools/latest/ 2>/dev/null || true
          rm -f cmdline-tools.zip
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> "$GITHUB_ENV"
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> "$GITHUB_PATH"
          echo "$ANDROID_SDK_ROOT/platform-tools" >> "$GITHUB_PATH"
          ls -la "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true

      - name: Accept licenses & install build tools / platforms
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          yes | sdkmanager --licenses || true
          sdkmanager --install "platform-tools" "platforms;android-31" "build-tools;31.0.0"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.19.0"

      - name: Install npm deps (legacy peer deps)
        run: npm ci --legacy-peer-deps || npm install --legacy-peer-deps

      - name: Restore Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Switch to JDK 11 for Gradle (AGP 7.0.x)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "11"

      - name: Ensure Android debug keystore
        run: |
          mkdir -p ~/.android
          if [ ! -f ~/.android/debug.keystore ]; then
            keytool -genkey -v \
              -keystore ~/.android/debug.keystore \
              -storepass android -keypass android \
              -alias androiddebugkey \
              -keyalg RSA -keysize 2048 -validity 10000 \
              -dname "CN=Android Debug,O=Android,C=US"
          fi

      - name: Build Debug APK
        env:
          ANDROID_HOME: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          cd android
          unset ANDROID_SDK_ROOT
          export ANDROID_HOME="$HOME/android-sdk"
          ./gradlew --no-daemon clean assembleDebug --stacktrace

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: |
            android/app/build/outputs/apk/debug/*.apk
            android/app/build/reports/**/*
          if-no-files-found: error

  smoke-test:
    name: Android Smoke Test (API 30)
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 25

    defaults:
      run:
        shell: bash -Eeuo pipefail {0}

    steps:
      - name: Checkout (shallow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-debug-apk
          path: ci-apk
          merge-multiple: true

      - name: Select APK
        id: select-apk
        run: |
          ls -R ./ci-apk || true
          APK="$(find ./ci-apk -type f -name '*debug*.apk' | head -n1 || true)"
          if [[ -z "${APK:-}" ]]; then
            echo "No APK found under ./ci-apk"
            exit 1
          fi
          echo "APK=$APK" | tee -a "$GITHUB_ENV"

      - name: Run emulator + install + launch
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          force-avd-creation: true
          disable-animations: true
          emulator-options: "-no-snapshot -noaudio -no-window -gpu swiftshader_indirect -accel off"
          script: |
            echo "Installing APK..."
            adb install -r "$APK"
            echo "Starting app..."
            adb shell am start -W -n com.app.uprise/.MainActivity
            sleep 10
            echo "Collecting diagnostics..."
            adb shell dumpsys activity | grep -A 5 "mFocusedApp"
            adb shell pm list packages | grep uprise
            echo "Smoke test completed"

      - name: Upload smoke artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-artifacts
          if-no-files-found: ignore
          path: |
            smoke-logcat.txt
            dumpsys.txt
            pm-packages.txt
