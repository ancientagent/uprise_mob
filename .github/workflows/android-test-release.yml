name: Android Test Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'test-v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --openssl-legacy-provider
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Anti-drift guard (warn mode)
        shell: bash
        run: |
          set -euo pipefail
          echo "== Anti-drift (warn mode) =="
          git ls-files | grep -E "(^|/)index\.android\.bundle$|\.log$|(^|/)artifacts/" || true

      - name: Env shape check (warn mode)
        shell: bash
        run: |
          echo "== Env shape check (warn mode) =="
          file=".env.development"
          if [[ -f "$file" ]]; then
            miss=0
            for key in API_BASE_URL REFRESH_TOKEN_URL UPDATED_USERDETAILS; do
              if ! grep -E "^${key}=" "$file" >/dev/null; then
                echo "[WARN] Missing $key in $file"
                miss=1
              fi
            done
            [[ $miss -eq 0 ]] && echo "[OK] $file contains required keys" || echo "[WARN] Missing required keys (warn mode)"
          else
            echo "[WARN] $file not found; emulator will rely on defaults"
          fi
          exit 0

      - name: Setup Java 11 (Gradle)
        id: j11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Java 17 (sdkmanager tools)
        id: j17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Prepare Android SDK (isolated, pinned cmdline-tools)
        env:
          ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
          JAVA_HOME: ${{ steps.j17.outputs.path }}
        shell: bash
        run: |
          set -e
          rm -rf "$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT"
          echo "sdk.dir=$ANDROID_SDK_ROOT" > ./android/local.properties
          CT_REV=8512546
          curl -sSL "https://dl.google.com/android/repository/commandlinetools-linux-${CT_REV}_latest.zip" -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/bin" "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          mv "$ANDROID_SDK_ROOT/cmdline-tools/lib" "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          mv "$ANDROID_SDK_ROOT/cmdline-tools/source.properties" "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          mv "$ANDROID_SDK_ROOT/cmdline-tools/NOTICE.txt" "$ANDROID_SDK_ROOT/cmdline-tools/latest/" || true
          printf 'y\ny\ny\ny\ny\ny\ny\ny\n' | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" --licenses >/dev/null || true
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2"

      - name: Pre-bundle JS for Release (warn on failure)
        shell: bash
        run: |
          set +e
          yarn bundle:android || echo "[WARN] bundle:android failed; relying on Gradle bundling"

      - name: Assemble Release APK
        env:
          JAVA_HOME: ${{ steps.j11.outputs.path }}
          ANDROID_SDK_ROOT: ${{ github.workspace }}/.android-sdk
        run: |
          cd android
          ./gradlew --no-daemon :app:assembleRelease --stacktrace --no-parallel

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  smoke-emulator:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11 (Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Java 17 (sdkmanager tools)
        id: j17-smoke
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: artifacts

      - name: Boot emulator, install and launch
        env:
          JAVA_HOME: ${{ steps.j17-smoke.outputs.path }}
        run: |
          sdkmanager "platforms;android-33" "system-images;android-33;google_apis;x86_64"
          echo "no" | avdmanager create avd -n ci_avd -k "system-images;android-33;google_apis;x86_64" -d pixel || true
          nohup emulator -avd ci_avd -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim -memory 1024 >/dev/null 2>&1 &
          adb wait-for-device
          # wait for boot completed
          for i in {1..90}; do
            if adb shell getprop sys.boot_completed | grep -m 1 '1'; then break; fi; sleep 2; done
          adb install -r artifacts/app-release.apk
          adb logcat -c
          adb shell monkey -p com.app.uprise -c android.intent.category.LAUNCHER 1
          adb logcat -d -t 300 > smoke-logcat.txt
          # Print interesting lines but do not fail build
          grep -E "ReactNativeJS|AndroidRuntime| E React|FATAL|SoLoader|Metro|packager" smoke-logcat.txt || true

      - name: Upload smoke logs
        uses: actions/upload-artifact@v4
        with:
          name: smoke-logs
          path: smoke-logcat.txt
