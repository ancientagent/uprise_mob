name: Android Test Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'test-v*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --openssl-legacy-provider
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Ensure SDK 33 + Build-Tools 33.0.2
        run: |
          sdkmanager "platforms;android-33" "build-tools;33.0.2"

      - name: Assemble Release APK
        run: |
          cd android
          ./gradlew --no-daemon :app:assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk

  smoke-emulator:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: artifacts

      - name: Boot emulator, install and launch
        run: |
          sdkmanager "platforms;android-33" "system-images;android-30;google_apis;x86_64"
          echo "no" | avdmanager create avd -n ci_avd -k "system-images;android-30;google_apis;x86_64" -d pixel || true
          nohup emulator -avd ci_avd -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim -memory 1024 >/dev/null 2>&1 &
          adb wait-for-device
          # wait for boot completed
          for i in {1..90}; do
            if adb shell getprop sys.boot_completed | grep -m 1 '1'; then break; fi; sleep 2; done
          adb install -r artifacts/app-release.apk
          adb logcat -c
          adb shell monkey -p com.app.uprise -c android.intent.category.LAUNCHER 1
          adb logcat -d -t 300 > smoke-logcat.txt
          # Print interesting lines but do not fail build
          grep -E "ReactNativeJS|AndroidRuntime| E React|FATAL|SoLoader|Metro|packager" smoke-logcat.txt || true

      - name: Upload smoke logs
        uses: actions/upload-artifact@v4
        with:
          name: smoke-logs
          path: smoke-logcat.txt

