=== SUPER-GENRE / FAMILIES COPY AUDIT ===
src/services/onboarding/getSuperGenres.service.js:6:// Fetch super genres for onboarding (community-forming categories)
src/services/onboarding/getSuperGenres.service.js:8:  const endpoint = Config.ONBOARDING_SUPER_GENRES || '/onboarding/super-genres';
src/services/families/getAllFamilies.service.js:5:import { listFamilies } from '../../contracts/families';
src/services/families/getAllFamilies.service.js:8:export default async function getAllFamiliesRequest(payload = {}) {
src/services/families/getAllFamilies.service.js:19:    return listFamilies();
src/services/families/getAllFamilies.service.js:21:    return listFamilies();
src/contracts/families.js:1:// Musical Families specification and helpers
src/contracts/families.js:3:// a mapping from legacy super-genres to families for onboarding UX.
src/contracts/families.js:125:// Map legacy super-genre selection to available families.
src/contracts/families.js:126:// Keys should be lowercase slugs of super genres used in the current app.
src/contracts/families.js:137:export const listFamilies = () => Object.values(MUSICAL_FAMILIES);
src/contracts/families.js:149:  listFamilies,
docs/RUNBOOK_ANDROID.md:128:  - Super Genre: typeahead suggestions (from `/onboarding/super-genres`)
docs/specs/GENRE_SYSTEM_ALPHA.md:3:> CRITICAL: Disregard ALL previous genre instructions. The Musical Families/Roots/Alliance system is scrapped for alpha. We are implementing a DIRECT SUB‑GENRE system with future expandability.
docs/specs/GENRE_SYSTEM_ALPHA.md:7:- No hierarchies: no super genres, no families/alliances.
docs/project-narrative/UPRISE Onboarding Flow & API Spec.md:10:2. **App immediately calls** `GET /onboarding/super-genres` and loads autocomplete data
docs/project-narrative/UPRISE Onboarding Flow & API Spec.md:11:3. **User begins typing genre** - smart autocomplete suggests from super genres list, but allows custom input
docs/project-narrative/UPRISE Onboarding Flow & API Spec.md:25:### GET /onboarding/super-genres
docs/project-narrative/UPRISE Onboarding Flow & API Spec.md:26:**Purpose:** Returns the complete list of super genres for autocomplete
docs/project-narrative/UPRISE Onboarding Flow & API Spec.md:314:- System suggests creating new dedicated super-genre community
docs/specs/04_COMMUNITY_LOCATION.md:4:> - Onboarding classification now uses Musical Families. See specs/04A_MUSICAL_FAMILIES.md.
docs/specs/04A_MUSICAL_FAMILIES.md:1:# Musical Families Community System (Phase 2)
docs/specs/04A_MUSICAL_FAMILIES.md:35:## Families (MVP Set)
docs/PHASE2_EXECUTION_PLAN.md:12: - Musical Families spec (Phase 2): see specs/04A_MUSICAL_FAMILIES.md.
docs/PHASE2_EXECUTION_PLAN.md:62:  - `/onboarding/super-genres` → hierarchy  
docs/INDEX.md:30:- Musical Families (DEPRECATED for Alpha): [specs/04A_MUSICAL_FAMILIES.md](./specs/04A_MUSICAL_FAMILIES.md)
docs/CHANGELOG.md:31:## 2025-09-13 - Musical Families Spec (Phase 2)
docs/CHANGELOG.md:32:- **Created**: `docs/specs/04A_MUSICAL_FAMILIES.md` — replaces super/sub‑genre onboarding with Musical Families; community key = `{city}-{state}-{family-id}`; all families selectable in all cities.
docs/CHANGELOG.md:34:- **Updated**: `docs/PHASE2_EXECUTION_PLAN.md` Doc Canonicalization to reference the Musical Families spec.
docs/CHANGELOG.md:281:  - Super‑genre typeahead (`/onboarding/super-genres`)
docs/CHANGELOG.md:317:  - Wire `/onboarding/super-genres` + `/onboarding/all-genres` in UI flow; persist selected super‑genre + `community_key`.
docs/Knowledge-Base/ONBOARDING_SMOKES.md:12:    - Pick Super‑genre (typeahead hits `/onboarding/super-genres`)
docs/Knowledge-Base/ONBOARDING_SMOKES.md:22:  - Requests to `/onboarding/super-genres` and `/onboarding/all-genres`
docs/july-model/MANUAL-SETUP-GUIDE.md:202:ONBOARDING_SUPER_GENRES=/onboarding/super-genres
docs/july-model/ENVIRONMENT-VARIABLES-REFERENCE.md:201:ONBOARDING_SUPER_GENRES=/onboarding/super-genres
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:5:The Uprise mobile app now features a comprehensive modern music genre system that covers the full spectrum of contemporary music. This system replaces the basic 23-genre list with a hierarchical structure of **12 super genres** and **over 100 sub-genres**.
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:28:### 1. `/onboarding/super-genres`
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:29:Returns the complete hierarchical structure with super genres and their sub-genres.
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:49:    // ... more super genres
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:81:Returns sub-genres for a specific super genre.
docs/july-model/Feature realignment/MODERN-GENRES-SYSTEM.md:201:1. **Hierarchical Selection**: Users first choose a super genre, then a sub-genre
docs/july-model/COMPREHENSIVE-API-ENDPOINT-AUDIT.md:109:GET /onboarding/super-genres
docs/july-model/COMPREHENSIVE-API-ENDPOINT-AUDIT.md:352:ONBOARDING_SUPER_GENRES=/onboarding/super-genres
docs/july-model/COMPREHENSIVE-API-ENDPOINT-AUDIT.md:424:const url = getRequestURL('/onboarding/super-genres');
